#    "$Name:  $";
#    "$Header:  $";
#=============================================================================
#
# file :        TestWriter.py
#
# description : Python source for the TestWriter and its commands.
#                The class is derived from Device. It represents the
#                CORBA servant object which will be accessed from the
#                network. All commands which can be executed on the
#                TestWriter are implemented in this file.
#
# project :     TANGO Device Server
#
# $Author:  $
#
# $Revision:  $
#
# $Log:  $
#
# copyleft :    European Synchrotron Radiation Facility
#               BP 220, Grenoble 38043
#               FRANCE
#
#=============================================================================
#          This file is generated by POGO
#    (Program Obviously used to Generate tango Object)
#
#         (c) - Software Engineering Group - ESRF
#=============================================================================
#


import PyTango
import sys
import numpy
import struct
import pickle

#==================================================================
#   TestWriter Class Description:
#
#         My Simple Server
#
#==================================================================
#     Device States Description:
#
#   DevState.ON :  Server On
#==================================================================


class NXSDataWriter(PyTango.Device_4Impl):

#--------- Add you global variables here --------------------------

#------------------------------------------------------------------
#    Device constructor
#------------------------------------------------------------------
    def __init__(self, cl, name):
        PyTango.Device_4Impl.__init__(self, cl, name)

        self.attr_value = ""
        self.attr_AcqChannelList = []
        self.attr_MeasurementGroupList = []
        self.attr_ExpChannelList = []
        self.attr_MotorList = []
        NXSDataWriter.init_device(self)

#------------------------------------------------------------------
#    Device destructor
#------------------------------------------------------------------
    def delete_device(self):
        print "[Device delete_device method] for device", self.get_name()

#------------------------------------------------------------------
#    Device initialization
#------------------------------------------------------------------
    def init_device(self):
        print "In ", self.get_name(), "::init_device()"
        self.set_state(PyTango.DevState.ON)
        self.get_device_properties(self.get_device_class())

#------------------------------------------------------------------
#    Always excuted hook method
#------------------------------------------------------------------
    def always_executed_hook(self):
        print "In ", self.get_name(), "::always_excuted_hook()"

#
#==================================================================
#
#    TestWriter read/write attribute methods
#
#==================================================================

#==================================================================
#
#    TestWriter command methods
#
#==================================================================
#
#------------------------------------------------------------------
#    SetState command:
#
#    Description: Set state of tango device
#
#    argin: DevString     tango state
#------------------------------------------------------------------
    def SetState(self, state):
        print "In ", self.get_name(), "::SetState()"
        if state == "RUNNING":
            self.set_state(PyTango.DevState.RUNNING)
        elif state == "FAULT":
            self.set_state(PyTango.DevState.FAULT)
        elif state == "ALARM":
            self.set_state(PyTango.DevState.ALARM)
        else:
            self.set_state(PyTango.DevState.ON)


#==================================================================
#
#    WriterClass class definition
#
#==================================================================
class NXSDataWriterClass(PyTango.DeviceClass):

    #    Class Properties
    class_property_list = {
         }

    #    Device Properties
    device_property_list = {
        }

    #    Command definitions
    cmd_list = {
        'SetState':
            [[PyTango.DevString, "ScalarString"],
            [PyTango.DevVoid, ""]],
        }

    #    Attribute definitions
    attr_list = {
        }

#------------------------------------------------------------------
#    WriterClass Constructor
#------------------------------------------------------------------
    def __init__(self, name):
        PyTango.DeviceClass.__init__(self, name)
        self.set_type(name)
        print "In TestWriterClass  constructor"

#==================================================================
#
#    Writer class main method
#
#==================================================================
if __name__ == '__main__':
    try:
        argv = list(sys.argv)
        argv[0] = "NXSDataWriter"
        py = PyTango.Util(argv)
        py.add_class(NXSDataWriterClass, NXSDataWriter)

        U = PyTango.Util.instance()
        U.server_init()
        U.server_run()

    except PyTango.DevFailed, e:
        print '-------> Received a DevFailed exception:', e
    except Exception, e:
        print '-------> An unforeseen exception occured....', e
